{"version":3,"sources":["script.js"],"names":["eleTime","document","getElementById","getTheTime","time","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","getPmAm","ifHours","innerHTML","setInterval","themeButton","darkTheme","iconTheme","selectedTheme","localStorage","getItem","selectedIcon","getCurrentTheme","body","classList","contains","getCurrentIcon","addEventListener","toggle","setItem"],"mappings":"AAAA,aAGA,IAAAA,QAAAC,SAAAC,eAAA,MAAA,EACA,SAAAC,aACA,IAAAC,EAAA,IAAAC,KACAC,EAAAF,EAAAG,SAAA,EACAC,EAAAJ,EAAAK,WAAA,EACAC,EAAAN,EAAAO,WAAA,EACAC,EAAA,IAAAN,EAAA,KAAA,KACAO,EAAA,EAAAP,EAAA,GAAA,IAGA,IAAAA,IACAA,GAAA,IAEAN,QAAAc,UAAAD,EAAAP,EAAA,KALA,EAAAE,EAAA,GAAA,KAKAA,EAAA,KAJA,EAAAE,EAAA,GAAA,KAIAA,EAAA,IAAAE,CACA,CAEAG,YAAAZ,WAAA,GAAA,EAKA,IAAAa,YAAAf,SAAAC,eAAA,cAAA,EACAe,UAAA,aACAC,UAAA,SAGAC,cAAAC,aAAAC,QAAA,gBAAA,EACAC,aAAAF,aAAAC,QAAA,eAAA,EAGAE,gBAAA,WACA,OAAAtB,SAAAuB,KAAAC,UAAAC,SAAAT,SAAA,EAAA,OAAA,OACA,EACAU,eAAA,WACA,OAAAX,YAAAS,UAAAC,SAAAR,SAAA,EAAA,UAAA,QACA,EAGAC,gBAEAlB,SAAAuB,KAAAC,UAAA,SAAAN,cAAA,MAAA,UAAAF,SAAA,EACAD,YAAAS,UAAA,YAAAH,aAAA,MAAA,UAAAJ,SAAA,GAIAF,YAAAY,iBAAA,QAAA,WAEA3B,SAAAuB,KAAAC,UAAAI,OAAAZ,SAAA,EACAD,YAAAS,UAAAI,OAAAX,SAAA,EAEAE,aAAAU,QAAA,iBAAAP,gBAAA,CAAA,EACAH,aAAAU,QAAA,gBAAAH,eAAA,CAAA,CACA,CAAA","file":"script.js","sourcesContent":["\"use strict\";\n\n// Get Element\nvar eleTime = document.getElementById(\"time\");\nfunction getTheTime() {\n  var time = new Date();\n  var hours = time.getHours();\n  var minutes = time.getMinutes();\n  var seconds = time.getSeconds();\n  var getPmAm = hours >= 13 ? \"Pm\" : \"Am\";\n  var ifHours = hours > 9 ? \"\" : \"0\";\n  var ifMinutes = minutes > 9 ? \"\" : \"0\";\n  var ifSeconds = seconds > 9 ? \"\" : \"0\";\n  if (hours >= 13) {\n    hours -= 12;\n  }\n  eleTime.innerHTML = ifHours + hours + \":\" + ifMinutes + minutes + \":\" + ifSeconds + seconds + \" \" + getPmAm;\n}\n(function () {\n  setInterval(getTheTime, 500);\n})();\n\n//\n/*  DARK LIGHT THEME  */\nvar themeButton = document.getElementById(\"theme-button\");\nvar darkTheme = \"dark-theme\";\nvar iconTheme = \"bx-sun\";\n\n// Previously selected topic (if user selected)\nvar selectedTheme = localStorage.getItem(\"selected-theme\");\nvar selectedIcon = localStorage.getItem(\"selected-icon\");\n\n// We obtain the current theme that the interface has by validating the dark-theme class\nvar getCurrentTheme = function getCurrentTheme() {\n  return document.body.classList.contains(darkTheme) ? \"dark\" : \"light\";\n};\nvar getCurrentIcon = function getCurrentIcon() {\n  return themeButton.classList.contains(iconTheme) ? \"bx-moon\" : \"bx-sun\";\n};\n\n// We validate if the user previously chose a topic\nif (selectedTheme) {\n  // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark\n  document.body.classList[selectedTheme === \"dark\" ? \"add\" : \"remove\"](darkTheme);\n  themeButton.classList[selectedIcon === \"bx-moon\" ? \"add\" : \"remove\"](iconTheme);\n}\n\n// Activate / deactivate the theme manually with the button\nthemeButton.addEventListener(\"click\", function () {\n  // Add or remove the dark / icon theme\n  document.body.classList.toggle(darkTheme);\n  themeButton.classList.toggle(iconTheme);\n  // We save the theme and the current icon that the user chose\n  localStorage.setItem(\"selected-theme\", getCurrentTheme());\n  localStorage.setItem(\"selected-icon\", getCurrentIcon());\n});"]}